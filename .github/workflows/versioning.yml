name: Versioning
on:
  push:
    branches:
      - develop  # Se ejecuta cuando se hace push en develop

jobs:
  create-tag:
    runs-on: windows-latest  # Aseguramos que se ejecute en Windows
    steps:
      - name: Checkout del Código
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Necesario para obtener todos los tags correctamente

      - name: Obtener Última Versión
        id: version
        shell: pwsh  # Usa PowerShell porque es Windows
        run: |
          $LATEST_TAG = git tag --sort=-v:refname | Select-Object -First 1
          Write-Output "Última versión encontrada: $LATEST_TAG"
          if ([string]::IsNullOrEmpty($LATEST_TAG)) {
             $NEW_TAG = "v1.0.0"
           } else {
             $parts = $LATEST_TAG -split "\."
             $parts[-1] = [int]$parts[-1] + 1
             $NEW_TAG = $parts -join "."
           }
           Write-Output "Nuevo tag generado: $NEW_TAG"
           echo "NEW_TAG=$NEW_TAG" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8

      - name: Autenticar con GitHub
        shell: pwsh
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --global user.email "cutberto.hdez.s@gmail.com"
          git config --global user.name "Cutberto Hernández Sánchez"
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/Cutber/DemoWeb.git

      - name: Crear y Subir Nuevo Tag
        shell: pwsh
        run: |
          git tag -a $Env:NEW_TAG -m "Automated release: $Env:NEW_TAG"
          git push origin $Env:NEW_TAG
